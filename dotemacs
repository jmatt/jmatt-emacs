(server-start)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Library Paths
;; Note: I like to keep every emacs library underneath
;; ~/.emacs.d and I shun loading them from the system
;; paths. This makes it easier to use this config on
;; multiple systems.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(add-to-list 'load-path "~/.emacs.d")
;;Add all top-level subdirectories of .emacs.d to the load path
(progn (cd "~/.emacs.d")
       (normal-top-level-add-subdirs-to-load-path))
;;Add all top-level subdirectories of .emacs.d/vendor to the load path
(progn (cd "~/.emacs.d/vendor")
       (normal-top-level-add-subdirs-to-load-path))
(progn (cd "~/.emacs.d/vendor/emacs-starter-kit")
       (normal-top-level-add-subdirs-to-load-path))
;(add-to-list 'load-path "/usr/local/share/emacs/site-lisp")

(setq dotfiles-dir (file-name-directory
                    (or (buffer-file-name) load-file-name)))

;; Create variables to store the path to this dotfile dir's lib etc and tmp directories
(setq vendor-dir (concat dotfiles-dir "vendor/"))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Aquamacs settings
;; Note: I like to keep every emacs library underneath
;; ~/.emacs.d and I shun loading them from the system
;; paths. This makes it easier to use this config on
;; multiple systems.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'emacs-starter-kit)
;(custom-set-variables '(aquamacs-styles-mode t))
;(setq mac-tool-bar-display-mode 'icons) ;for newbies


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; color-theme
;; Load color-theme autoloads from my repository. I'm using my own
;; repository because otherwise each version of emacs has it's own
;; squirelly version of color-theme
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;(require 'color-theme-autoloads "color-theme-autoloads")
(cond
 ((and (window-system) (string-match "aquamacs" (emacs-version)))
  (message "Emacs is using Aquamacs custom color-theme.")
  (require 'color-theme-jmatt))
 ((string-match " 24." (emacs-version))
  (progn
    (message "Emacs 24 is using custom terminal theme.")
    (load-theme 'wombat)))
 (t ;; Default Case
  (progn
    (message "Emacs <24 is using custom terminal color-theme")
    (require 'color-theme)
    (color-theme-initialize)
    (color-theme-comidia))))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;ÃŸ; color-theme
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;My old color-theme ... color-theme-dark-bliss!



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Org-mode
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;replaced by aquaemacs-starter-kit goodies.
;;(add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
;;(define-key global-map "\C-cl" 'org-store-link)
;;(define-key global-map "\C-ca" 'org-agenda)
;;(setq org-log-done t)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
;; Development         
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;(require 'dev)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Misc Happiness
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(if window-system
    (windmove-default-keybindings 'meta)
  (progn
    (global-set-key [(alt left)]  'windmove-left)
    (global-set-key [(alt up)]    'windmove-up)
    (global-set-key [(alt right)] 'windmove-right)
    (global-set-key [(alt down)]  'windmove-down)))

;smooth-scrolling
(require 'smooth-scrolling)

;;ac
(require 'auto-complete)
(require 'auto-complete-config)
(ac-config-default)
(ac-flyspell-workaround)
(add-to-list 'ac-dictionary-directories (concat vendor-dir "auto-complete/dict"))
(global-auto-complete-mode t)
(setq ac-auto-show-menu t)
(setq ac-dwim t)
(setq ac-use-menu-map t)
(setq ac-quick-help-delay 1)
(setq ac-quick-help-height 60)

(set-default 'ac-sources
             '(ac-source-dictionary
               ac-source-words-in-buffer
               ac-source-words-in-same-mode-buffers
               ac-source-words-in-all-buffer))

(dolist (mode '(magit-log-edit-mode log-edit-mode org-mode text-mode haml-mode
                sass-mode yaml-mode csv-mode espresso-mode haskell-mode
                html-mode nxml-mode sh-mode smarty-mode clojure-mode
                lisp-mode textile-mode markdown-mode tuareg-mode))
  (add-to-list 'ac-modes mode))


;;ac-slime auto-complete plugin
(require 'ac-slime)
(add-hook 'slime-mode-hook 'set-up-slime-ac)
(add-hook 'slime-repl-mode-hook 'set-up-slime-ac)

;; Remove ^M when using *shell*
;; Add ansi-color to *shell* and maybe comint
;(autoload 'ansi-color-for-comint-mode-on "ansi-color" nil t)
;(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)
(add-hook 'comint-output-filter-functions
          'comint-strip-ctrl-m)

;;Key triggers
(ac-set-trigger-key "TAB")
(define-key ac-completing-map (kbd "C-M-n") 'ac-next)
(define-key ac-completing-map (kbd "C-M-p") 'ac-previous)
(define-key ac-completing-map "\t" 'ac-complete)
(define-key ac-completing-map "\r" nil)
;;(add-to-list 'ac-dictionary-directories "/Users/jmatt/.emacs.d/vendor/ac-dict")
;;(ac-config-default)

;; smex
(require 'smex)
(smex-initialize)
(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
;; This is your old M-x.
(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)

;; appearance
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'menu-bar-mode) (menu-bar-mode -1))

;; undo awesomeness
(require 'undo-tree)
(global-undo-tree-mode)

;; scpaste
(setq scpaste-http-destination "http://jmatt.org/scp"
      scpaste-scp-destination "jmatt@r2d2#6400:/usr/share/jetty/webapps/jmatt/scp")

;; Set transparency of emacs
(defun transparency (value)
  "Sets the transparency of the frame window. 0=transparent/100=opaque"
  (interactive "nTransparency Value 0 - 100 opaque:")
  (set-frame-parameter (selected-frame) 'alpha value))

;; Windows only configuration
;;(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 ;;'(appmenu-mode t)
 ;;'(cua-mode t nil (cua-base))
 ;;'(emacsw32-max-frames f)
 ;;'(emacsw32-style-frame-title t)
 ;;'(hfyview-quick-print-in-files-menu t)
 ;;'(menuacc-mode t)
 ;;'(noprint-hide-print-in-menus t)
 ;;'(noprint-hide-ps-print-in-menus t)
 ;;'(ourcomments-ido-ctrl-tab t)
 ;;'(rebind-keys-mode t)
 ;;'(recentf-mode t)
 ;;'(sex-mode t)
 ;;'(tabkey2-mode t)
 ;;'(w32-meta-style (quote w32-lr))
 ;;'(setq w32-enable-synthesized-fonts t)
 ;;'(w32shell-shell (quote cmd)))

(cond
 ((and (window-system) (string-match "aquamacs" (emacs-version)))
  (progn
    (set-face-attribute 'default nil :font "-outline-Menlo-normal-normal-normal-mono-15-*-*-*-c-*-iso8859-1")
    (set-face-font 'italic "-outline-Menlo-normal-italic-normal-mono-*-*-*-*-c-*-iso8859-1")
    (set-face-font 'bold  "-outline-Menlo-bold-normal-normal-mono-*-*-*-*-c-*-iso8859-1" )
    (set-face-font 'bold-italic "-outline-Menlo-bold-italic-normal-mono-*-*-*-*-c-*-iso8859-1")))
 ((window-system) ;; Default Case.
  (progn
    (set-face-attribute 'default nil :font "-outline-Consolas-normal-normal-normal-mono-15-*-*-*-c-*-iso8859-1")
    (set-face-font 'italic "-outline-Consolas-normal-italic-normal-mono-*-*-*-*-c-*-iso8859-1")
    (set-face-font 'bold  "-outline-Consolas-bold-normal-normal-mono-*-*-*-*-c-*-iso8859-1" )
    (set-face-font 'bold-italic "-outline-Consolas-bold-italic-normal-mono-*-*-*-*-c-*-iso8859-1")))
 )

(add-to-list 'load-path "~/.emacs.d/vendor/gist/gist.el")
(require 'gist)

;;(global-set-key (kbd "C-M-a") 'move-beginning-of-line)

(custom-set-variables
    '(ispell-dictionary "american")
    '(ispell-program-name "aspell.exe"))

